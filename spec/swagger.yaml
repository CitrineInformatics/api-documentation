swagger: '2.0'
schemes:
    - https # Remove if your API donsn't support HTTPS
host: citrination.com
basePath: /api
info:
    title: Citrination
    version: 1.0.0
    termsOfService: 'https://citrination.com/tos'
    contact:
        name: Citrine Informatics
        email: admin@citrine.io
        url: 'https://citrine.io'
    license:
        name: Apache License Version 2.0
        url: 'https://www.apache.org/licenses/LICENSE-2.0'
    description: |
        # Introduction
        The Citrination API provides much of the functionality that is available through the Citrination web interface. In addition, there exists some functionality that is only available through the API (for example, some of the more advanced query elements). All access to the API is controlled using a unique token assigned to each user (see the section on authentication).

        Users may access the API directly through https requests, or may use one of the client libraries described below.

        # Python client
        A python client is available through [github](https://github.com/CitrineInformatics/python-citrination-client) or can be installed with pip using `pip install citrination-client`. There may be issues installing libraries that depend on [six](https://pypi.python.org/pypi/six) on OSX. If you encounter issues during installation, you may also try `pip install --ignore-installed six citrination-client`. The python client can be configured using:

        ```python
        from citrination_client import *

        client = CitrinationClient('YOUR_API_KEY')
        ```

        If you are using a private instance of Citrination (e.g. https://mysite.citrination.com), then your client can be configured with:

        ```python
        from citrination_client import *

        client = CitrinationClient('YOUR_API_KEY', 'https://mysite.citrination.com')
        ```

        <span style="color:red">**Important!**</span> All variables and method names are represented in snake case in the python client library, rather than camel case as is used in this documentation. For example, a variable named `updatedAt` in this documentation would be `updated_at` in the python library.

        # Java client
        A java client is available through [github](https://github.com/CitrineInformatics/java-citrination-client). The client can be configured using:

        ```java
        import io.citrine.jcc.core.CitrinationClient;

        class MyClass {
            void createClient() {
                CitrinationClient citrinationClient = new CitrinationClient.Builder()
                    .setApiKey('YOUR_API_KEY')
                    .build();
            }
        }
        ```

        If you are using a private instance of Citrination (e.g. https://mysite.citrination.com), then your client can be configured with:

        ```java
        import io.citrine.jcc.core.CitrinationClient;

        class MyClass {
            void createClient() {
                CitrinationClient citrinationClient = new CitrinationClient.Builder()
                    .setProject('mysite')
                    .setApiKey('YOUR_API_KEY')
                    .build();
            }
        }
        ```
produces:
    - application/json
consumes:
    - application/json
securityDefinitions:
    ApiKey:
        type: apiKey
        in: header
        name: X-API-Key
        description: You API key is available under account settings when you are logged into Citrination. Note that your API key will be different accross deployments of Citrination. Therefore, if you have an account on the open Citrination platform (https://citrination.com) and on a private instance named mysite (https://mysite.citrination.com), then you will have different API keys on each.
security:
    - ApiKey: []
